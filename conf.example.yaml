# example configuration file for buy_ovh

# API stuff
# They are explained here: https://github.com/ovh/python-ovh
# Comment them if you still don't know
# The script will tell you what to do
APIEndpoint: ovh-eu
APIKey: 123
APISecret: 456
APIConsumerKey: 789

# in which datacenters are we looking for?
datacenters:
    - gra
    - rbx
    - sbg
    - lon
    - fra
    - waw
    - bhs

# the invoice name or plan code of the servers must start with:
filterName:
    - "24ska"
    - "KS-LE-B"
    - "KS-4"

# type of disks we want. (ssd,nvme,sa)
# don't define it if you want all types
filterDisk:
    - ssd
    - nvme

ovhSubsidiary: FR

# show a helpful prompt after the list of server
showPrompt: True
# show the CPU type if available (unless showFqn=true)
showCpu: False
# show the servers even if they are unavailable
showUnavailable: False
# print the FQN instead of spliting it
# less readeable but up to you
showFqn: False

# define if you have a coupon
# buying will fail with an incorrect coupon so be careful
#coupon: MYCOUPON

# if True, don't actually buy (for testing)
# set to False if you want to actually buy the servers
# Try the script once with fakeBuy but don't forget to set it to False after your test
fakeBuy: True

# Loop?
# If True, the script refreshes the list of servers
# every 'sleepsecs' seconds and does the monitoring (email sending).
# You need to press CTRL-C to stop the loop and then you can choose.
# If False, it displays the list of servers once and let you choose.
# This is only the initial state, the user can always start the loop
# by pressing 'L'
loop: False

# how many seconds before a refresh (if loop = True)
sleepsecs: 20

# email sending (email_on = False deactivate all emails)
email_on: False

# Send an email at startup (for test maybe)
email_at_startup: False

# Send email if something is added or removed on the
# availability endpoint during a run
# (only if loop = True)
email_added_removed: False

# Monitor availability of servers whose FQN starts with a string
# This is a "super" FQN which has the datacenter at the end
# (only if loop = True)
email_availability_monitor:
    # NVMe KS-4 with 32g RAM in GRA
    - 24sk40.ram-32g-ecc-2133.softraid-2x450nvme.gra
    # Same but any datacenter
    - 24sk40.ram-32g-ecc-2133.softraid-2x450nvme
    # Any KS-4
    - 24sk40

# email server details
email_server_port: 587
email_server_name: "my.server.com"
email_server_login: "login"
email_server_password: "password"
email_sender: "login@hello.com"
email_receiver: "receiver@hello.com"
